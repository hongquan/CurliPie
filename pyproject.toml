[project]
name = "curlipie"
description = "Library to convert cURL command line to HTTPie"
authors = [{ name = "Nguyễn Hồng Quân", email = "ng.hong.quan@gmail.com" }]
maintainers = [{ name = "Nguyễn Hồng Quân", email = "ng.hong.quan@gmail.com" }]
dynamic = ["version"]
readme = "README.rst"
license = { text = "MPL-2.0" }
requires-python = "<4.0,>=3.11"
dependencies = [
  "multidict>=6.1.0",
  "yarl>=1.18.3",
  "orjson>=3.10.15",
  "first>=2.0.2",
  "http-constants>=0.5.0",
  "logbook>=1.8.0",
  "single-version>=1.6.0",
  "kiss-headers>=2.5.0",
  "pydantic>=2.10.6",
  "typed-argument-parser>=1.10.1",
  "pydantic-settings>=2.7.1",
]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "Environment :: Web Environment",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["api", "http", "curl", "httpie", "cli", "conversion"]

[project.urls]
repository = "https://github.com/hongquan/CurliPie.git"

[dependency-groups]
dev = [
  "devtools>=0.12.2",
  "fastapi>=0.115.8",
  "aiofiles>=24.1.0",
  "uvicorn>=0.30.1",
  "jinja2>=3.1.5",
]
lint = [
    "ruff>=0.9.5",
]
test = [
    "mypy>=1.15.0",
    "pytest-mypy>=0.10.3",
    "types-first>=2.0.5.20240806",
]

[tool.mypy]
python_version = "3.12"
show_error_codes = true
allow_redefinition = true
plugins = [
  "pydantic.mypy",
]
# These options are recommended by Pydantic.
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true


[[tool.mypy.overrides]]
module = [
  "devtools.*",
  "logbook.*",
  "http_constants.headers.*",
]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_typed = true
init_forbid_extra = true
warn_required_dynamic_aliases = true


[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--mypy"
testpaths = ["tests", "curlipie"]

[tool.ruff]
line-length = 120
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes `E` and `F` codes by default.
select = ["E", "F"]
ignore = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "single"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
